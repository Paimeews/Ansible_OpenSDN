---
- name: Set kolla directory based on kolla installation mode
  set_fact:
    kolla_dir: "{{ vanilla_kolla_dir if kolla_mode == 'vanilla' else contrail_kolla_dir }}"

- name: Check openstack repo is present
  stat:
    path: "{{ kolla_dir }}"
  register: kolla_dir_stat

- name: Clone openstack git repo
  git:
    repo: https://github.com/opensdn-io/tf-kolla-ansible.git
    dest: "{{ kolla_dir }}"
    force: "{{ force_clone }}"
  ignore_errors: yes
  register: kolla_repo
  when:
    - not kolla_dir_stat.stat.exists or force_clone|bool
    - kolla_mode is undefined or kolla_mode != 'vanilla'

- name: Clone vanilla openstack git repo
  git:
    repo: https://github.com/openstack/kolla-ansible.git
    dest: "{{ kolla_dir }}"
    force: "{{ force_clone }}"
  ignore_errors: yes
  register: kolla_repo
  when:
    - kolla_mode is defined
    - kolla_mode == 'vanilla'

- name: Choosing openstack branch
  shell: "git checkout opensdn/{{ openstack_sku }}"
  args:
    chdir: "{{ kolla_dir }}"
  when:
    - not skip_checkout|bool
    - kolla_mode is undefined or kolla_mode != 'vanilla'

- name: Choosing vanilla openstack branch
  block:
    - name: Detect branch
      set_fact:
        kolla_vanilla_branch: "{{ kolla_vanilla_tags[openstack_sku] | default('') }}"
    - name: Check branch for emptyness
      fail:
        msg: Branch for {{ openstack_sku }} can not be detected. Fail deployment.
      when: kolla_vanilla_branch == ""
    - name: Checkout branch
      shell: "git checkout {{ kolla_vanilla_branch }}"
      args:
        chdir: "{{ kolla_dir }}"
  when:
    - not skip_checkout|bool
    - kolla_mode is defined
    - kolla_mode == 'vanilla'

- name: Create configs base dir
  block:
    - name: Create configs base dir
      file:
        path: "/etc/kolla/"
        state: directory
        mode: 0755
        owner: "{{ ansible_effective_user_id }}"
        group: "{{ ansible_effective_group_id }}"
        recurse: yes
  become: yes

- name: Create configs customization dir
  file:
    path: "{{ '/etc/kolla/config/' + item.key | dirname }}"
    state: directory
    mode: 0755
    recurse: yes
  with_dict: "{{ kolla_config.customize | default({}) }}"

- name: Upload configs custimization
  copy:
    dest: "/etc/kolla/config/{{ item.key }}"
    content: "{{ item.value }}"
  with_dict: "{{ kolla_config.customize | default({}) }}"

- name: Remove python3-requests
  package:
    name: python3-requests
    state: absent
  when:
    - ansible_os_family == 'RedHat' or ansible_os_family == 'Rocky'

- name: install kolla requirements
  pip:
    requirements: "{{ kolla_dir }}/requirements.txt"
  register: res
  retries: 5
  until: res is success
  environment:
    PIP_BREAK_SYSTEM_PACKAGES: 1

- name: install kolla libraries
  shell: "{{ ansible_python.executable }} setup.py install --force"
  no_log: true
  args:
    chdir: "{{ kolla_dir }}"
  environment:
    PIP_BREAK_SYSTEM_PACKAGES: 1
