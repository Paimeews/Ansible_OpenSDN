---
- name: set instance data
  set_fact:
    instance_data: "{{ instances[hostvars[inventory_hostname].instance_name] }}"
  tags:
   - always

- name: set instance name
  set_fact:
    instance_name: "{{ hostvars[inventory_hostname].instance_name }}"
  tags:
   - always

- name: update common_volumes
  set_fact:
    common_volumes: "{{ common_volumes + [ contrail_configuration.STATS_COLLECTOR_DESTINATION_PATH|dirname + ':' + contrail_configuration.STATS_COLLECTOR_DESTINATION_PATH|dirname ] }}"
  when: contrail_configuration.STATS_COLLECTOR_DESTINATION_PATH is defined

- name: run common tasks
  include_tasks: "common_{{ ansible_system }}.yml"

- name: create redis
  include_role:
    name: opensdn_redis
    tasks_from: "{{ item }}"
  with_items:
    - update_images
    - main
  when: roles[instance_name].webui is defined or roles[instance_name].analytics is defined
  tags:
    - webui
    - analytics

- name: create contrail config database
  include_role:
    name: opensdn_config_database
    tasks_from: "{{ item }}"
  with_items:
    - update_images
    - main
  when: roles[instance_name].config_database is defined
  tags:
    - config_database

- name: create contrail config
  include_role:
    name: opensdn_config
    tasks_from: "{{ item }}"
  with_items:
    - update_images
    - main
  when: roles[instance_name].config is defined
  tags:
    - config

- name: create contrail webui
  include_role:
    name: opensdn_webui
    tasks_from: "{{ item }}"
  with_items:
    - update_images
    - main
  when: roles[instance_name].webui is defined
  tags:
    - webui

- name: create contrail control
  include_role:
    name: opensdn_control
    tasks_from: "{{ item }}"
  with_items:
    - update_images
    - main
  when: roles[instance_name].control is defined
  tags:
   - control

- name: create contrail control_only
  include_role:
    name: opensdn_control_only
    tasks_from: "{{ item }}"
  with_items:
    - update_images
    - main
  when: roles[instance_name].control_only is defined
  tags:
    - control_only

- name: create contrail analytics database
  include_role:
    name: opensdn_analytics_database
    tasks_from: "{{ item }}"
  with_items:
    - update_images
    - main
  when: roles[instance_name].analytics_database is defined
  tags:
    - analytics_database

- name: create contrail analytics
  include_role:
    name: opensdn_analytics
    tasks_from: "{{ item }}"
  with_items:
    - update_images
    - main
  when: roles[instance_name].analytics is defined
  tags:
    - analytics

- name: create contrail analytics alarm
  include_role:
    name: opensdn_analytics_alarm
    tasks_from: "{{ item }}"
  with_items:
    - update_images
    - main
  when:
    - roles[instance_name].analytics_alarm is defined
  tags:
    - analytics
    - analytics_alarm

- name: create contrail analytics snmp
  include_role:
    name: opensdn_analytics_snmp
    tasks_from: "{{ item }}"
  with_items:
    - update_images
    - main
  when:
   - roles[instance_name].analytics_snmp is defined
  tags:
    - analytics
    - analytics_snmp

- name: create k8s cni
  include_role:
    name: opensdn_k8s_cni
    tasks_from: "{{ item }}"
  with_items:
    - update_images
    - main
  when: roles[instance_name].k8s_node is defined
  tags:
    - k8s

- name: configure k8s for Contrail
  include_role:
    name: opensdn_k8s_master
  when: roles[instance_name].k8s_master is defined and k8s_master_name is defined and inventory_hostname == k8s_master_name
  tags:
    - k8s

- name: create contrail kube manager
  include_role:
    name: opensdn_k8s_kubemanager
    tasks_from: "{{ item }}"
  with_items:
    - update_images
    - main
  when: roles[instance_name].kubemanager is defined and k8s_master_ip is defined and k8s_master_name is defined
  tags:
    - k8s

- name: create contrail rsyslogd for Linux
  include_role:
    name: opensdn_rsyslogd
    tasks_from: "{{ item }}"
  with_items:
    - update_images
    - main
  when: roles[instance_name].vrouter is defined and ansible_system == 'Linux'
  tags:
    - vrouter
    - rsyslogd

- name: create contrail vrouter for Linux
  include_role:
    name: opensdn_vrouter
    tasks_from: "{{ item }}"
  with_items:
    - update_images
    - main
  when: roles[instance_name].vrouter is defined and ansible_system == 'Linux'
  tags:
    - vrouter

- name: create contrail tor agents
  include_role:
    name: opensdn_toragent
    tasks_from: "{{ item }}"
  with_items:
    - update_images
    - main
  when: roles[instance_name].toragent is defined

- name: Pluginize legacy compute
  include_role:
    name: opensdn_compute_legacy
    tasks_from: "{{ item }}"
  with_items:
    - update_images
    - main
  when: roles[instance_name].openstack_compute_legacy is defined

- name: create tsn haproxy
  include_role:
    name: haproxy
    tasks_from: "{{ item }}"
  with_items:
    - update_images
    - main
  when: roles[instance_name].tsn_haproxy is defined
