---
kolla_config: {}
host_intf_dict: {}
contrail_kolla_dir: "{{ playbook_dir }}/../../contrail-kolla-ansible"
vanilla_kolla_dir: "{{ playbook_dir}}/../../kolla-ansible"
kolla_mode: >-
    {%- if contrail_configuration.KOLLA_MODE is defined -%}
      {{ contrail_configuration.KOLLA_MODE }}
    {%- else -%}
      {{ 'patched' }}
    {%- endif -%}
inventory_name: "my_inventory"
kolla_passwd: "{{ kolla_config.get('kolla_passwords', {}) }}"
gen_passwords: yes

default_openstack_sku: "yoga"
openstack_sku: >-
    {%- if contrail_configuration.OPENSTACK_VERSION is defined -%}
      {{ contrail_configuration.OPENSTACK_VERSION }}
    {%- elif kolla_config.kolla_globals is defined and kolla_config.kolla_globals.openstack_release is defined -%}
      {{ kolla_config.kolla_globals.openstack_release }}
    {%- else -%}
      {{ default_openstack_sku }}
    {%- endif %}

default_kolla_globals:
  haproxy_client_timeout: 30m
  haproxy_server_timeout: 30m
  # possible values:
  #   opencontrail      - for regular monolitic plugin
  #   opencontrail-ml2  - for ml2 plugin
  neutron_plugin_agent: opencontrail
  neutron_opencontrail_init_image_full: "{{ container_registry }}/opensdn-openstack-neutron-init:{{ contrail_version_tag }}"
  neutron_opencontrail_ml2_init_image_full: "{{ container_registry }}/opensdn-openstack-neutron-ml2-init:{{ contrail_version_tag }}"
  nova_compute_opencontrail_init_image_full: "{{ container_registry}}/opensdn-openstack-compute-init:{{ contrail_version_tag }}"
  ironic_notification_manager_image_full: "{{ container_registry}}/opensdn-openstack-ironic-notification-manager:{{ contrail_version_tag }}"
  heat_opencontrail_init_image_full: "{{ container_registry}}/opensdn-openstack-heat-init:{{ contrail_version_tag }}"
  enable_barbican: yes
  customize_etc_hosts: no
  enable_swift: no
  libvirt_enable_sasl: no
  openstack_release: "{{ openstack_sku }}"
  enable_opencontrail_trunk: yes
  enable_opencontrail_tags: yes
  enable_opencontrail_rbac: "{{ 'yes' if contrail_configuration.AAA_MODE is defined and contrail_configuration.AAA_MODE == 'rbac' else 'no' }}"
  opencontrail_api_server_ip: "{{ contrail_configuration.CONFIG_NODES | default(contrail_configuration.CONTROLLER_NODES | default(config_nodes_list | join(','))) | replace (',', ' ') }}"
  opencontrail_collector_ip: "{{ contrail_configuration.ANALYTICS_NODES | default(contrail_configuration.CONTROLLER_NODES | default(analytics_nodes_list | join(','))) | replace (',', ' ') }}"
  opencontrail_webui_ip: "{{ contrail_configuration.WEBUI_NODES | default(contrail_configuration.CONTROLLER_NODES | default(webui_nodes_list | join(','))) | replace (',', ' ') }}"
  config_api_ssl_enable: "{{ contrail_configuration.CONFIG_API_SSL_ENABLE | default(contrail_configuration.SSL_ENABLE | default('no')) | bool }}"
  analytics_api_ssl_enable: "{{ contrail_configuration.ANALYTICS_API_SSL_ENABLE | default(contrail_configuration.SSL_ENABLE | default('no')) | bool }}"

  contrail_ca_file: "{{ contrail_configuration.SERVER_CA_CERTFILE | default('/etc/contrail/ssl/certs/ca-cert.pem') }}"
  neutron_fwaas_version: v2

  # for opencontrail ml2 plugin
  contrail_dm_integration: True
